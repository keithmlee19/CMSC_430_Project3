Terminals unused in grammar

    ELSE
    ELSIF
    ENDFOLD
    ENDIF
    FOLD
    IF
    LEFT
    RIGHT
    THEN


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body ';'

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';'

    3 type: INTEGER
    4     | CHARACTER
    5     | REAL

    6 optional_variable: variable
    7                  | ε

    8 variable: IDENTIFIER ':' type IS statement ';'
    9         | IDENTIFIER ':' LIST OF type IS list ';'

   10 list: '(' expressions ')'

   11 expressions: expressions ',' expression
   12            | expression

   13 body: BEGIN_ statement_ END

   14 statement_: statement ';'
   15           | error ';'

   16 statement: expression
   17          | WHEN condition ',' expression ':' expression
   18          | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH

   19 cases: cases case
   20      | ε

   21 case: CASE INT_LITERAL ARROW statement ';'

   22 condition: condition ANDOP relation
   23          | relation

   24 relation: '(' condition ')'
   25         | expression RELOP expression

   26 expression: expression ADDOP term
   27           | term

   28 term: term MULOP exp_term
   29     | term MODOP exp_term
   30     | exp_term

   31 exp_term: neg_term EXPOP exp_term
   32         | neg_term

   33 neg_term: NEGOP primary
   34         | primary

   35 primary: '(' expression ')'
   36        | INT_LITERAL
   37        | CHAR_LITERAL
   38        | REAL_LITERAL
   39        | IDENTIFIER '(' expression ')'
   40        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 10 24 35 39
    ')' (41) 10 24 35 39
    ',' (44) 11 17
    ':' (58) 8 9 17
    ';' (59) 1 2 8 9 14 15 18 21
    error (256) 15
    IDENTIFIER <iden> (258) 2 8 9 39 40
    INT_LITERAL <value> (259) 21 36
    CHAR_LITERAL <value> (260) 37
    REAL_LITERAL <value> (261) 38
    ADDOP <oper> (262) 26
    MULOP <oper> (263) 28
    MODOP <oper> (264) 29
    EXPOP <oper> (265) 31
    NEGOP <oper> (266) 33
    ANDOP <oper> (267) 22
    RELOP <oper> (268) 25
    ARROW (269) 18 21
    BEGIN_ (270) 13
    CASE (271) 21
    CHARACTER (272) 4
    ELSE (273)
    ELSIF (274)
    END (275) 13
    ENDFOLD (276)
    ENDIF (277)
    ENDSWITCH (278) 18
    FOLD (279)
    FUNCTION (280) 2
    IF (281)
    INTEGER (282) 3
    IS (283) 8 9 18
    LEFT (284)
    LIST (285) 9
    OF (286) 9
    OTHERS (287) 18
    REAL (288) 5
    RETURNS (289) 2
    RIGHT (290)
    SWITCH (291) 18
    THEN (292)
    WHEN (293) 17


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    function (45)
        on left: 1
        on right: 0
    function_header (46)
        on left: 2
        on right: 1
    type (47)
        on left: 3 4 5
        on right: 2 8 9
    optional_variable (48)
        on left: 6 7
        on right: 1
    variable (49)
        on left: 8 9
        on right: 6
    list <list> (50)
        on left: 10
        on right: 9
    expressions <list> (51)
        on left: 11 12
        on right: 10 11
    body <value> (52)
        on left: 13
        on right: 1
    statement_ <value> (53)
        on left: 14 15
        on right: 13
    statement <value> (54)
        on left: 16 17 18
        on right: 8 14 18 21
    cases <value> (55)
        on left: 19 20
        on right: 18 19
    case <value> (56)
        on left: 21
        on right: 19
    condition <value> (57)
        on left: 22 23
        on right: 17 22 24
    relation <value> (58)
        on left: 24 25
        on right: 22 23
    expression <value> (59)
        on left: 26 27
        on right: 11 12 16 17 18 25 26 35 39
    term <value> (60)
        on left: 28 29 30
        on right: 26 27 28 29
    exp_term <value> (61)
        on left: 31 32
        on right: 28 29 30 31
    neg_term <value> (62)
        on left: 33 34
        on right: 31 32
    primary <value> (63)
        on left: 35 36 37 38 39 40
        on right: 33 34


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable body ';'

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 7 (optional_variable)

    optional_variable  go to state 7
    variable           go to state 8


State 4

    2 function_header: FUNCTION IDENTIFIER • RETURNS type ';'

    RETURNS  shift, and go to state 9


State 5

    0 $accept: function $end •

    $default  accept


State 6

    8 variable: IDENTIFIER • ':' type IS statement ';'
    9         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 10


State 7

    1 function: function_header optional_variable • body ';'

    BEGIN_  shift, and go to state 11

    body  go to state 12


State 8

    6 optional_variable: variable •

    $default  reduce using rule 6 (optional_variable)


State 9

    2 function_header: FUNCTION IDENTIFIER RETURNS • type ';'

    CHARACTER  shift, and go to state 13
    INTEGER    shift, and go to state 14
    REAL       shift, and go to state 15

    type  go to state 16


State 10

    8 variable: IDENTIFIER ':' • type IS statement ';'
    9         | IDENTIFIER ':' • LIST OF type IS list ';'

    CHARACTER  shift, and go to state 13
    INTEGER    shift, and go to state 14
    LIST       shift, and go to state 17
    REAL       shift, and go to state 15

    type  go to state 18


State 11

   13 body: BEGIN_ • statement_ END

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    '('           shift, and go to state 27

    statement_  go to state 28
    statement   go to state 29
    expression  go to state 30
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 12

    1 function: function_header optional_variable body • ';'

    ';'  shift, and go to state 35


State 13

    4 type: CHARACTER •

    $default  reduce using rule 4 (type)


State 14

    3 type: INTEGER •

    $default  reduce using rule 3 (type)


State 15

    5 type: REAL •

    $default  reduce using rule 5 (type)


State 16

    2 function_header: FUNCTION IDENTIFIER RETURNS type • ';'

    ';'  shift, and go to state 36


State 17

    9 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 37


State 18

    8 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 38


State 19

   15 statement_: error • ';'

    ';'  shift, and go to state 39


State 20

   39 primary: IDENTIFIER • '(' expression ')'
   40        | IDENTIFIER •

    '('  shift, and go to state 40

    $default  reduce using rule 40 (primary)


State 21

   36 primary: INT_LITERAL •

    $default  reduce using rule 36 (primary)


State 22

   37 primary: CHAR_LITERAL •

    $default  reduce using rule 37 (primary)


State 23

   38 primary: REAL_LITERAL •

    $default  reduce using rule 38 (primary)


State 24

   33 neg_term: NEGOP • primary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 27

    primary  go to state 41


State 25

   18 statement: SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 42
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 26

   17 statement: WHEN • condition ',' expression ':' expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 43

    condition   go to state 44
    relation    go to state 45
    expression  go to state 46
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 27

   35 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 47
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 28

   13 body: BEGIN_ statement_ • END

    END  shift, and go to state 48


State 29

   14 statement_: statement • ';'

    ';'  shift, and go to state 49


State 30

   16 statement: expression •
   26 expression: expression • ADDOP term

    ADDOP  shift, and go to state 50

    $default  reduce using rule 16 (statement)


State 31

   27 expression: term •
   28 term: term • MULOP exp_term
   29     | term • MODOP exp_term

    MULOP  shift, and go to state 51
    MODOP  shift, and go to state 52

    $default  reduce using rule 27 (expression)


State 32

   30 term: exp_term •

    $default  reduce using rule 30 (term)


State 33

   31 exp_term: neg_term • EXPOP exp_term
   32         | neg_term •

    EXPOP  shift, and go to state 53

    $default  reduce using rule 32 (exp_term)


State 34

   34 neg_term: primary •

    $default  reduce using rule 34 (neg_term)


State 35

    1 function: function_header optional_variable body ';' •

    $default  reduce using rule 1 (function)


State 36

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 37

    9 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    CHARACTER  shift, and go to state 13
    INTEGER    shift, and go to state 14
    REAL       shift, and go to state 15

    type  go to state 54


State 38

    8 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    '('           shift, and go to state 27

    statement   go to state 55
    expression  go to state 30
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 39

   15 statement_: error ';' •

    $default  reduce using rule 15 (statement_)


State 40

   39 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 56
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 41

   33 neg_term: NEGOP primary •

    $default  reduce using rule 33 (neg_term)


State 42

   18 statement: SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH
   26 expression: expression • ADDOP term

    ADDOP  shift, and go to state 50
    IS     shift, and go to state 57


State 43

   24 relation: '(' • condition ')'
   35 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 43

    condition   go to state 58
    relation    go to state 45
    expression  go to state 59
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 44

   17 statement: WHEN condition • ',' expression ':' expression
   22 condition: condition • ANDOP relation

    ANDOP  shift, and go to state 60
    ','    shift, and go to state 61


State 45

   23 condition: relation •

    $default  reduce using rule 23 (condition)


State 46

   25 relation: expression • RELOP expression
   26 expression: expression • ADDOP term

    ADDOP  shift, and go to state 50
    RELOP  shift, and go to state 62


State 47

   26 expression: expression • ADDOP term
   35 primary: '(' expression • ')'

    ADDOP  shift, and go to state 50
    ')'    shift, and go to state 63


State 48

   13 body: BEGIN_ statement_ END •

    $default  reduce using rule 13 (body)


State 49

   14 statement_: statement ';' •

    $default  reduce using rule 14 (statement_)


State 50

   26 expression: expression ADDOP • term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    term      go to state 64
    exp_term  go to state 32
    neg_term  go to state 33
    primary   go to state 34


State 51

   28 term: term MULOP • exp_term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    exp_term  go to state 65
    neg_term  go to state 33
    primary   go to state 34


State 52

   29 term: term MODOP • exp_term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    exp_term  go to state 66
    neg_term  go to state 33
    primary   go to state 34


State 53

   31 exp_term: neg_term EXPOP • exp_term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    exp_term  go to state 67
    neg_term  go to state 33
    primary   go to state 34


State 54

    9 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 68


State 55

    8 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 69


State 56

   26 expression: expression • ADDOP term
   39 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 50
    ')'    shift, and go to state 70


State 57

   18 statement: SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH

    $default  reduce using rule 20 (cases)

    cases  go to state 71


State 58

   22 condition: condition • ANDOP relation
   24 relation: '(' condition • ')'

    ANDOP  shift, and go to state 60
    ')'    shift, and go to state 72


State 59

   25 relation: expression • RELOP expression
   26 expression: expression • ADDOP term
   35 primary: '(' expression • ')'

    ADDOP  shift, and go to state 50
    RELOP  shift, and go to state 62
    ')'    shift, and go to state 63


State 60

   22 condition: condition ANDOP • relation

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 43

    relation    go to state 73
    expression  go to state 46
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 61

   17 statement: WHEN condition ',' • expression ':' expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 74
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 62

   25 relation: expression RELOP • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 75
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 63

   35 primary: '(' expression ')' •

    $default  reduce using rule 35 (primary)


State 64

   26 expression: expression ADDOP term •
   28 term: term • MULOP exp_term
   29     | term • MODOP exp_term

    MULOP  shift, and go to state 51
    MODOP  shift, and go to state 52

    $default  reduce using rule 26 (expression)


State 65

   28 term: term MULOP exp_term •

    $default  reduce using rule 28 (term)


State 66

   29 term: term MODOP exp_term •

    $default  reduce using rule 29 (term)


State 67

   31 exp_term: neg_term EXPOP exp_term •

    $default  reduce using rule 31 (exp_term)


State 68

    9 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 76

    list  go to state 77


State 69

    8 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 8 (variable)


State 70

   39 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 39 (primary)


State 71

   18 statement: SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   19 cases: cases • case

    CASE    shift, and go to state 78
    OTHERS  shift, and go to state 79

    case  go to state 80


State 72

   24 relation: '(' condition ')' •

    $default  reduce using rule 24 (relation)


State 73

   22 condition: condition ANDOP relation •

    $default  reduce using rule 22 (condition)


State 74

   17 statement: WHEN condition ',' expression • ':' expression
   26 expression: expression • ADDOP term

    ADDOP  shift, and go to state 50
    ':'    shift, and go to state 81


State 75

   25 relation: expression RELOP expression •
   26 expression: expression • ADDOP term

    ADDOP  shift, and go to state 50

    $default  reduce using rule 25 (relation)


State 76

   10 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expressions  go to state 82
    expression   go to state 83
    term         go to state 31
    exp_term     go to state 32
    neg_term     go to state 33
    primary      go to state 34


State 77

    9 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 84


State 78

   21 case: CASE • INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 85


State 79

   18 statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 86


State 80

   19 cases: cases case •

    $default  reduce using rule 19 (cases)


State 81

   17 statement: WHEN condition ',' expression ':' • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 87
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 82

   10 list: '(' expressions • ')'
   11 expressions: expressions • ',' expression

    ')'  shift, and go to state 88
    ','  shift, and go to state 89


State 83

   12 expressions: expression •
   26 expression: expression • ADDOP term

    ADDOP  shift, and go to state 50

    $default  reduce using rule 12 (expressions)


State 84

    9 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 9 (variable)


State 85

   21 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 90


State 86

   18 statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    '('           shift, and go to state 27

    statement   go to state 91
    expression  go to state 30
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 87

   17 statement: WHEN condition ',' expression ':' expression •
   26 expression: expression • ADDOP term

    ADDOP  shift, and go to state 50

    $default  reduce using rule 17 (statement)


State 88

   10 list: '(' expressions ')' •

    $default  reduce using rule 10 (list)


State 89

   11 expressions: expressions ',' • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 92
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 90

   21 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    '('           shift, and go to state 27

    statement   go to state 93
    expression  go to state 30
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 91

   18 statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 94


State 92

   11 expressions: expressions ',' expression •
   26 expression: expression • ADDOP term

    ADDOP  shift, and go to state 50

    $default  reduce using rule 11 (expressions)


State 93

   21 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 95


State 94

   18 statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 96


State 95

   21 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 21 (case)


State 96

   18 statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 18 (statement)
