Terminals unused in grammar

    ELSE
    ELSIF
    ENDFOLD
    ENDIF
    FOLD
    IF
    LEFT
    RIGHT
    THEN


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body ';'

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';'

    3 type: INTEGER
    4     | CHARACTER
    5     | REAL

    6 optional_variable: variable
    7                  | ε

    8 variable: IDENTIFIER ':' type IS statement ';'
    9         | IDENTIFIER ':' LIST OF type IS list ';'

   10 list: '(' expressions ')'

   11 expressions: expressions ',' expression
   12            | expression

   13 body: BEGIN_ statement_ END

   14 statement_: statement ';'
   15           | error ';'

   16 statement: expression
   17          | WHEN or_condition ',' expression ':' expression
   18          | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH

   19 cases: cases case
   20      | ε

   21 case: CASE INT_LITERAL ARROW statement ';'

   22 or_condition: or_condition OROP condition
   23             | condition

   24 condition: condition ANDOP not_condition
   25          | not_condition

   26 not_condition: NOTOP relation
   27              | relation

   28 relation: '(' or_condition ')'
   29         | expression RELOP expression

   30 expression: expression ADDOP term
   31           | term

   32 term: term MULOP exp_term
   33     | term MODOP exp_term
   34     | exp_term

   35 exp_term: neg_term EXPOP exp_term
   36         | neg_term

   37 neg_term: NEGOP primary
   38         | primary

   39 primary: '(' expression ')'
   40        | INT_LITERAL
   41        | CHAR_LITERAL
   42        | REAL_LITERAL
   43        | IDENTIFIER '(' expression ')'
   44        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 10 28 39 43
    ')' (41) 10 28 39 43
    ',' (44) 11 17
    ':' (58) 8 9 17
    ';' (59) 1 2 8 9 14 15 18 21
    error (256) 15
    IDENTIFIER <iden> (258) 2 8 9 43 44
    INT_LITERAL <value> (259) 21 40
    CHAR_LITERAL <value> (260) 41
    REAL_LITERAL <value> (261) 42
    ADDOP <oper> (262) 30
    MULOP <oper> (263) 32
    MODOP <oper> (264) 33
    EXPOP <oper> (265) 35
    NEGOP <oper> (266) 37
    ANDOP <oper> (267) 24
    OROP <oper> (268) 22
    NOTOP <oper> (269) 26
    RELOP <oper> (270) 29
    ARROW (271) 18 21
    BEGIN_ (272) 13
    CASE (273) 21
    CHARACTER (274) 4
    ELSE (275)
    ELSIF (276)
    END (277) 13
    ENDFOLD (278)
    ENDIF (279)
    ENDSWITCH (280) 18
    FOLD (281)
    FUNCTION (282) 2
    IF (283)
    INTEGER (284) 3
    IS (285) 8 9 18
    LEFT (286)
    LIST (287) 9
    OF (288) 9
    OTHERS (289) 18
    REAL (290) 5
    RETURNS (291) 2
    RIGHT (292)
    SWITCH (293) 18
    THEN (294)
    WHEN (295) 17


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    function (47)
        on left: 1
        on right: 0
    function_header (48)
        on left: 2
        on right: 1
    type (49)
        on left: 3 4 5
        on right: 2 8 9
    optional_variable (50)
        on left: 6 7
        on right: 1
    variable (51)
        on left: 8 9
        on right: 6
    list <list> (52)
        on left: 10
        on right: 9
    expressions <list> (53)
        on left: 11 12
        on right: 10 11
    body <value> (54)
        on left: 13
        on right: 1
    statement_ <value> (55)
        on left: 14 15
        on right: 13
    statement <value> (56)
        on left: 16 17 18
        on right: 8 14 18 21
    cases <value> (57)
        on left: 19 20
        on right: 18 19
    case <value> (58)
        on left: 21
        on right: 19
    or_condition <value> (59)
        on left: 22 23
        on right: 17 22 28
    condition <value> (60)
        on left: 24 25
        on right: 22 23 24
    not_condition <value> (61)
        on left: 26 27
        on right: 24 25
    relation <value> (62)
        on left: 28 29
        on right: 26 27
    expression <value> (63)
        on left: 30 31
        on right: 11 12 16 17 18 29 30 39 43
    term <value> (64)
        on left: 32 33 34
        on right: 30 31 32 33
    exp_term <value> (65)
        on left: 35 36
        on right: 32 33 34 35
    neg_term <value> (66)
        on left: 37 38
        on right: 35 36
    primary <value> (67)
        on left: 39 40 41 42 43 44
        on right: 37 38


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable body ';'

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 7 (optional_variable)

    optional_variable  go to state 7
    variable           go to state 8


State 4

    2 function_header: FUNCTION IDENTIFIER • RETURNS type ';'

    RETURNS  shift, and go to state 9


State 5

    0 $accept: function $end •

    $default  accept


State 6

    8 variable: IDENTIFIER • ':' type IS statement ';'
    9         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 10


State 7

    1 function: function_header optional_variable • body ';'

    BEGIN_  shift, and go to state 11

    body  go to state 12


State 8

    6 optional_variable: variable •

    $default  reduce using rule 6 (optional_variable)


State 9

    2 function_header: FUNCTION IDENTIFIER RETURNS • type ';'

    CHARACTER  shift, and go to state 13
    INTEGER    shift, and go to state 14
    REAL       shift, and go to state 15

    type  go to state 16


State 10

    8 variable: IDENTIFIER ':' • type IS statement ';'
    9         | IDENTIFIER ':' • LIST OF type IS list ';'

    CHARACTER  shift, and go to state 13
    INTEGER    shift, and go to state 14
    LIST       shift, and go to state 17
    REAL       shift, and go to state 15

    type  go to state 18


State 11

   13 body: BEGIN_ • statement_ END

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    '('           shift, and go to state 27

    statement_  go to state 28
    statement   go to state 29
    expression  go to state 30
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 12

    1 function: function_header optional_variable body • ';'

    ';'  shift, and go to state 35


State 13

    4 type: CHARACTER •

    $default  reduce using rule 4 (type)


State 14

    3 type: INTEGER •

    $default  reduce using rule 3 (type)


State 15

    5 type: REAL •

    $default  reduce using rule 5 (type)


State 16

    2 function_header: FUNCTION IDENTIFIER RETURNS type • ';'

    ';'  shift, and go to state 36


State 17

    9 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 37


State 18

    8 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 38


State 19

   15 statement_: error • ';'

    ';'  shift, and go to state 39


State 20

   43 primary: IDENTIFIER • '(' expression ')'
   44        | IDENTIFIER •

    '('  shift, and go to state 40

    $default  reduce using rule 44 (primary)


State 21

   40 primary: INT_LITERAL •

    $default  reduce using rule 40 (primary)


State 22

   41 primary: CHAR_LITERAL •

    $default  reduce using rule 41 (primary)


State 23

   42 primary: REAL_LITERAL •

    $default  reduce using rule 42 (primary)


State 24

   37 neg_term: NEGOP • primary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 27

    primary  go to state 41


State 25

   18 statement: SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 42
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 26

   17 statement: WHEN • or_condition ',' expression ':' expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 43
    '('           shift, and go to state 44

    or_condition   go to state 45
    condition      go to state 46
    not_condition  go to state 47
    relation       go to state 48
    expression     go to state 49
    term           go to state 31
    exp_term       go to state 32
    neg_term       go to state 33
    primary        go to state 34


State 27

   39 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 50
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 28

   13 body: BEGIN_ statement_ • END

    END  shift, and go to state 51


State 29

   14 statement_: statement • ';'

    ';'  shift, and go to state 52


State 30

   16 statement: expression •
   30 expression: expression • ADDOP term

    ADDOP  shift, and go to state 53

    $default  reduce using rule 16 (statement)


State 31

   31 expression: term •
   32 term: term • MULOP exp_term
   33     | term • MODOP exp_term

    MULOP  shift, and go to state 54
    MODOP  shift, and go to state 55

    $default  reduce using rule 31 (expression)


State 32

   34 term: exp_term •

    $default  reduce using rule 34 (term)


State 33

   35 exp_term: neg_term • EXPOP exp_term
   36         | neg_term •

    EXPOP  shift, and go to state 56

    $default  reduce using rule 36 (exp_term)


State 34

   38 neg_term: primary •

    $default  reduce using rule 38 (neg_term)


State 35

    1 function: function_header optional_variable body ';' •

    $default  reduce using rule 1 (function)


State 36

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 37

    9 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    CHARACTER  shift, and go to state 13
    INTEGER    shift, and go to state 14
    REAL       shift, and go to state 15

    type  go to state 57


State 38

    8 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    '('           shift, and go to state 27

    statement   go to state 58
    expression  go to state 30
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 39

   15 statement_: error ';' •

    $default  reduce using rule 15 (statement_)


State 40

   43 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 59
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 41

   37 neg_term: NEGOP primary •

    $default  reduce using rule 37 (neg_term)


State 42

   18 statement: SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH
   30 expression: expression • ADDOP term

    ADDOP  shift, and go to state 53
    IS     shift, and go to state 60


State 43

   26 not_condition: NOTOP • relation

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 44

    relation    go to state 61
    expression  go to state 49
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 44

   28 relation: '(' • or_condition ')'
   39 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 43
    '('           shift, and go to state 44

    or_condition   go to state 62
    condition      go to state 46
    not_condition  go to state 47
    relation       go to state 48
    expression     go to state 63
    term           go to state 31
    exp_term       go to state 32
    neg_term       go to state 33
    primary        go to state 34


State 45

   17 statement: WHEN or_condition • ',' expression ':' expression
   22 or_condition: or_condition • OROP condition

    OROP  shift, and go to state 64
    ','   shift, and go to state 65


State 46

   23 or_condition: condition •
   24 condition: condition • ANDOP not_condition

    ANDOP  shift, and go to state 66

    $default  reduce using rule 23 (or_condition)


State 47

   25 condition: not_condition •

    $default  reduce using rule 25 (condition)


State 48

   27 not_condition: relation •

    $default  reduce using rule 27 (not_condition)


State 49

   29 relation: expression • RELOP expression
   30 expression: expression • ADDOP term

    ADDOP  shift, and go to state 53
    RELOP  shift, and go to state 67


State 50

   30 expression: expression • ADDOP term
   39 primary: '(' expression • ')'

    ADDOP  shift, and go to state 53
    ')'    shift, and go to state 68


State 51

   13 body: BEGIN_ statement_ END •

    $default  reduce using rule 13 (body)


State 52

   14 statement_: statement ';' •

    $default  reduce using rule 14 (statement_)


State 53

   30 expression: expression ADDOP • term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    term      go to state 69
    exp_term  go to state 32
    neg_term  go to state 33
    primary   go to state 34


State 54

   32 term: term MULOP • exp_term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    exp_term  go to state 70
    neg_term  go to state 33
    primary   go to state 34


State 55

   33 term: term MODOP • exp_term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    exp_term  go to state 71
    neg_term  go to state 33
    primary   go to state 34


State 56

   35 exp_term: neg_term EXPOP • exp_term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    exp_term  go to state 72
    neg_term  go to state 33
    primary   go to state 34


State 57

    9 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 73


State 58

    8 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 74


State 59

   30 expression: expression • ADDOP term
   43 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 53
    ')'    shift, and go to state 75


State 60

   18 statement: SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH

    $default  reduce using rule 20 (cases)

    cases  go to state 76


State 61

   26 not_condition: NOTOP relation •

    $default  reduce using rule 26 (not_condition)


State 62

   22 or_condition: or_condition • OROP condition
   28 relation: '(' or_condition • ')'

    OROP  shift, and go to state 64
    ')'   shift, and go to state 77


State 63

   29 relation: expression • RELOP expression
   30 expression: expression • ADDOP term
   39 primary: '(' expression • ')'

    ADDOP  shift, and go to state 53
    RELOP  shift, and go to state 67
    ')'    shift, and go to state 68


State 64

   22 or_condition: or_condition OROP • condition

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 43
    '('           shift, and go to state 44

    condition      go to state 78
    not_condition  go to state 47
    relation       go to state 48
    expression     go to state 49
    term           go to state 31
    exp_term       go to state 32
    neg_term       go to state 33
    primary        go to state 34


State 65

   17 statement: WHEN or_condition ',' • expression ':' expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 79
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 66

   24 condition: condition ANDOP • not_condition

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 43
    '('           shift, and go to state 44

    not_condition  go to state 80
    relation       go to state 48
    expression     go to state 49
    term           go to state 31
    exp_term       go to state 32
    neg_term       go to state 33
    primary        go to state 34


State 67

   29 relation: expression RELOP • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 81
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 68

   39 primary: '(' expression ')' •

    $default  reduce using rule 39 (primary)


State 69

   30 expression: expression ADDOP term •
   32 term: term • MULOP exp_term
   33     | term • MODOP exp_term

    MULOP  shift, and go to state 54
    MODOP  shift, and go to state 55

    $default  reduce using rule 30 (expression)


State 70

   32 term: term MULOP exp_term •

    $default  reduce using rule 32 (term)


State 71

   33 term: term MODOP exp_term •

    $default  reduce using rule 33 (term)


State 72

   35 exp_term: neg_term EXPOP exp_term •

    $default  reduce using rule 35 (exp_term)


State 73

    9 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 82

    list  go to state 83


State 74

    8 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 8 (variable)


State 75

   43 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 43 (primary)


State 76

   18 statement: SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   19 cases: cases • case

    CASE    shift, and go to state 84
    OTHERS  shift, and go to state 85

    case  go to state 86


State 77

   28 relation: '(' or_condition ')' •

    $default  reduce using rule 28 (relation)


State 78

   22 or_condition: or_condition OROP condition •
   24 condition: condition • ANDOP not_condition

    ANDOP  shift, and go to state 66

    $default  reduce using rule 22 (or_condition)


State 79

   17 statement: WHEN or_condition ',' expression • ':' expression
   30 expression: expression • ADDOP term

    ADDOP  shift, and go to state 53
    ':'    shift, and go to state 87


State 80

   24 condition: condition ANDOP not_condition •

    $default  reduce using rule 24 (condition)


State 81

   29 relation: expression RELOP expression •
   30 expression: expression • ADDOP term

    ADDOP  shift, and go to state 53

    $default  reduce using rule 29 (relation)


State 82

   10 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expressions  go to state 88
    expression   go to state 89
    term         go to state 31
    exp_term     go to state 32
    neg_term     go to state 33
    primary      go to state 34


State 83

    9 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 90


State 84

   21 case: CASE • INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 91


State 85

   18 statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 92


State 86

   19 cases: cases case •

    $default  reduce using rule 19 (cases)


State 87

   17 statement: WHEN or_condition ',' expression ':' • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 93
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 88

   10 list: '(' expressions • ')'
   11 expressions: expressions • ',' expression

    ')'  shift, and go to state 94
    ','  shift, and go to state 95


State 89

   12 expressions: expression •
   30 expression: expression • ADDOP term

    ADDOP  shift, and go to state 53

    $default  reduce using rule 12 (expressions)


State 90

    9 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 9 (variable)


State 91

   21 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 96


State 92

   18 statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    '('           shift, and go to state 27

    statement   go to state 97
    expression  go to state 30
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 93

   17 statement: WHEN or_condition ',' expression ':' expression •
   30 expression: expression • ADDOP term

    ADDOP  shift, and go to state 53

    $default  reduce using rule 17 (statement)


State 94

   10 list: '(' expressions ')' •

    $default  reduce using rule 10 (list)


State 95

   11 expressions: expressions ',' • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 98
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 96

   21 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    '('           shift, and go to state 27

    statement   go to state 99
    expression  go to state 30
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 97

   18 statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 100


State 98

   11 expressions: expressions ',' expression •
   30 expression: expression • ADDOP term

    ADDOP  shift, and go to state 53

    $default  reduce using rule 11 (expressions)


State 99

   21 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 101


State 100

   18 statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 102


State 101

   21 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 21 (case)


State 102

   18 statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 18 (statement)
