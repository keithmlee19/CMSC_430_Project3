Grammar

    0 $accept: function $end

    1 function: function_header optional_variable_ body ';'

    2 function_header: FUNCTION IDENTIFIER optional_params RETURNS type ';'

    3 type: INTEGER
    4     | CHARACTER
    5     | REAL

    6 optional_variable_: optional_variable
    7                   | error ';'

    8 optional_variable: optional_variable variable
    9                  | ε

   10 variable: IDENTIFIER ':' type IS statement ';'
   11         | IDENTIFIER ':' LIST OF type IS list ';'

   12 list: '(' expressions ')'

   13 expressions: expressions ',' expression
   14            | expression

   15 optional_params: parameters
   16                | ε

   17 parameters: parameters ',' parameter
   18           | parameter

   19 parameter: IDENTIFIER ':' type

   20 body: BEGIN_ statement_ END

   21 statement_: statement ';'
   22           | error ';'

   23 statement: expression
   24          | WHEN or_condition ',' expression ':' expression
   25          | SWITCH expression IS cases OTHERS ARROW statement_ ENDSWITCH
   26          | IF or_condition THEN statement_ elsif_clauses ELSE statement_ ENDIF
   27          | FOLD direction operator list_choice ENDFOLD

   28 elsif_clauses: elsif_clauses elsif_clause
   29              | ε

   30 elsif_clause: ELSIF or_condition THEN statement_

   31 cases: cases case_
   32      | ε

   33 case_: case
   34      | error ';'

   35 case: CASE INT_LITERAL ARROW statement ';'

   36 direction: LEFT
   37          | RIGHT

   38 operator: ADDOP
   39         | MULOP
   40         | EXPOP

   41 list_choice: list
   42            | IDENTIFIER

   43 or_condition: or_condition OROP condition
   44             | condition

   45 condition: condition ANDOP not_condition
   46          | not_condition

   47 not_condition: NOTOP relation
   48              | relation

   49 relation: '(' or_condition ')'
   50         | expression RELOP expression

   51 expression: expression ADDOP term
   52           | term

   53 term: term MULOP exp_term
   54     | term MODOP exp_term
   55     | exp_term

   56 exp_term: neg_term EXPOP exp_term
   57         | neg_term

   58 neg_term: NEGOP primary
   59         | primary

   60 primary: '(' expression ')'
   61        | INT_LITERAL
   62        | CHAR_LITERAL
   63        | REAL_LITERAL
   64        | IDENTIFIER '(' expression ')'
   65        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 12 49 60 64
    ')' (41) 12 49 60 64
    ',' (44) 13 17 24
    ':' (58) 10 11 19 24
    ';' (59) 1 2 7 10 11 21 22 34 35
    error (256) 7 22 34
    IDENTIFIER <iden> (258) 2 10 11 19 42 64 65
    INT_LITERAL <value> (259) 35 61
    CHAR_LITERAL <value> (260) 62
    REAL_LITERAL <value> (261) 63
    ADDOP <oper> (262) 38 51
    MULOP <oper> (263) 39 53
    MODOP <oper> (264) 54
    EXPOP <oper> (265) 40 56
    ANDOP <oper> (266) 45
    OROP <oper> (267) 43
    RELOP <oper> (268) 50
    NEGOP <oper> (269) 58
    NOTOP <oper> (270) 47
    ARROW (271) 25 35
    BEGIN_ (272) 20
    CASE (273) 35
    CHARACTER (274) 4
    ELSE (275) 26
    ELSIF (276) 30
    END (277) 20
    ENDFOLD (278) 27
    ENDIF (279) 26
    ENDSWITCH (280) 25
    FOLD (281) 27
    FUNCTION (282) 2
    IF (283) 26
    INTEGER (284) 3
    IS (285) 10 11 25
    LEFT (286) 36
    LIST (287) 11
    OF (288) 11
    OTHERS (289) 25
    REAL (290) 5
    RETURNS (291) 2
    RIGHT (292) 37
    SWITCH (293) 25
    THEN (294) 26 30
    WHEN (295) 24


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    function (47)
        on left: 1
        on right: 0
    function_header (48)
        on left: 2
        on right: 1
    type (49)
        on left: 3 4 5
        on right: 2 10 11 19
    optional_variable_ (50)
        on left: 6 7
        on right: 1
    optional_variable (51)
        on left: 8 9
        on right: 6 8
    variable (52)
        on left: 10 11
        on right: 8
    list <list> (53)
        on left: 12
        on right: 11 41
    expressions <list> (54)
        on left: 13 14
        on right: 12 13
    optional_params (55)
        on left: 15 16
        on right: 2
    parameters (56)
        on left: 17 18
        on right: 15 17
    parameter (57)
        on left: 19
        on right: 17 18
    body <value> (58)
        on left: 20
        on right: 1
    statement_ <value> (59)
        on left: 21 22
        on right: 20 25 26 30
    statement <value> (60)
        on left: 23 24 25 26 27
        on right: 10 21 35
    elsif_clauses <value> (61)
        on left: 28 29
        on right: 26 28
    elsif_clause <value> (62)
        on left: 30
        on right: 28
    cases <value> (63)
        on left: 31 32
        on right: 25 31
    case_ <value> (64)
        on left: 33 34
        on right: 31
    case <value> (65)
        on left: 35
        on right: 33
    direction <dir> (66)
        on left: 36 37
        on right: 27
    operator <oper> (67)
        on left: 38 39 40
        on right: 27
    list_choice <list> (68)
        on left: 41 42
        on right: 27
    or_condition <value> (69)
        on left: 43 44
        on right: 24 26 30 43 49
    condition <value> (70)
        on left: 45 46
        on right: 43 44 45
    not_condition <value> (71)
        on left: 47 48
        on right: 45 46
    relation <value> (72)
        on left: 49 50
        on right: 47 48
    expression <value> (73)
        on left: 51 52
        on right: 13 14 23 24 25 50 51 60 64
    term <value> (74)
        on left: 53 54 55
        on right: 51 52 53 54
    exp_term <value> (75)
        on left: 56 57
        on right: 53 54 55 56
    neg_term <value> (76)
        on left: 58 59
        on right: 56 57
    primary <value> (77)
        on left: 60 61 62 63 64 65
        on right: 58 59


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER optional_params RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable_ body ';'

    error  shift, and go to state 6

    IDENTIFIER  reduce using rule 9 (optional_variable)
    BEGIN_      reduce using rule 9 (optional_variable)

    optional_variable_  go to state 7
    optional_variable   go to state 8


State 4

    2 function_header: FUNCTION IDENTIFIER • optional_params RETURNS type ';'

    IDENTIFIER  shift, and go to state 9

    $default  reduce using rule 16 (optional_params)

    optional_params  go to state 10
    parameters       go to state 11
    parameter        go to state 12


State 5

    0 $accept: function $end •

    $default  accept


State 6

    7 optional_variable_: error • ';'

    ';'  shift, and go to state 13


State 7

    1 function: function_header optional_variable_ • body ';'

    BEGIN_  shift, and go to state 14

    body  go to state 15


State 8

    6 optional_variable_: optional_variable •
    8 optional_variable: optional_variable • variable

    IDENTIFIER  shift, and go to state 16

    $default  reduce using rule 6 (optional_variable_)

    variable  go to state 17


State 9

   19 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 18


State 10

    2 function_header: FUNCTION IDENTIFIER optional_params • RETURNS type ';'

    RETURNS  shift, and go to state 19


State 11

   15 optional_params: parameters •
   17 parameters: parameters • ',' parameter

    ','  shift, and go to state 20

    $default  reduce using rule 15 (optional_params)


State 12

   18 parameters: parameter •

    $default  reduce using rule 18 (parameters)


State 13

    7 optional_variable_: error ';' •

    $default  reduce using rule 7 (optional_variable_)


State 14

   20 body: BEGIN_ • statement_ END

    error         shift, and go to state 21
    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    FOLD          shift, and go to state 27
    IF            shift, and go to state 28
    SWITCH        shift, and go to state 29
    WHEN          shift, and go to state 30
    '('           shift, and go to state 31

    statement_  go to state 32
    statement   go to state 33
    expression  go to state 34
    term        go to state 35
    exp_term    go to state 36
    neg_term    go to state 37
    primary     go to state 38


State 15

    1 function: function_header optional_variable_ body • ';'

    ';'  shift, and go to state 39


State 16

   10 variable: IDENTIFIER • ':' type IS statement ';'
   11         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 40


State 17

    8 optional_variable: optional_variable variable •

    $default  reduce using rule 8 (optional_variable)


State 18

   19 parameter: IDENTIFIER ':' • type

    CHARACTER  shift, and go to state 41
    INTEGER    shift, and go to state 42
    REAL       shift, and go to state 43

    type  go to state 44


State 19

    2 function_header: FUNCTION IDENTIFIER optional_params RETURNS • type ';'

    CHARACTER  shift, and go to state 41
    INTEGER    shift, and go to state 42
    REAL       shift, and go to state 43

    type  go to state 45


State 20

   17 parameters: parameters ',' • parameter

    IDENTIFIER  shift, and go to state 9

    parameter  go to state 46


State 21

   22 statement_: error • ';'

    ';'  shift, and go to state 47


State 22

   64 primary: IDENTIFIER • '(' expression ')'
   65        | IDENTIFIER •

    '('  shift, and go to state 48

    $default  reduce using rule 65 (primary)


State 23

   61 primary: INT_LITERAL •

    $default  reduce using rule 61 (primary)


State 24

   62 primary: CHAR_LITERAL •

    $default  reduce using rule 62 (primary)


State 25

   63 primary: REAL_LITERAL •

    $default  reduce using rule 63 (primary)


State 26

   58 neg_term: NEGOP • primary

    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    '('           shift, and go to state 31

    primary  go to state 49


State 27

   27 statement: FOLD • direction operator list_choice ENDFOLD

    LEFT   shift, and go to state 50
    RIGHT  shift, and go to state 51

    direction  go to state 52


State 28

   26 statement: IF • or_condition THEN statement_ elsif_clauses ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    NOTOP         shift, and go to state 53
    '('           shift, and go to state 54

    or_condition   go to state 55
    condition      go to state 56
    not_condition  go to state 57
    relation       go to state 58
    expression     go to state 59
    term           go to state 35
    exp_term       go to state 36
    neg_term       go to state 37
    primary        go to state 38


State 29

   25 statement: SWITCH • expression IS cases OTHERS ARROW statement_ ENDSWITCH

    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    '('           shift, and go to state 31

    expression  go to state 60
    term        go to state 35
    exp_term    go to state 36
    neg_term    go to state 37
    primary     go to state 38


State 30

   24 statement: WHEN • or_condition ',' expression ':' expression

    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    NOTOP         shift, and go to state 53
    '('           shift, and go to state 54

    or_condition   go to state 61
    condition      go to state 56
    not_condition  go to state 57
    relation       go to state 58
    expression     go to state 59
    term           go to state 35
    exp_term       go to state 36
    neg_term       go to state 37
    primary        go to state 38


State 31

   60 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    '('           shift, and go to state 31

    expression  go to state 62
    term        go to state 35
    exp_term    go to state 36
    neg_term    go to state 37
    primary     go to state 38


State 32

   20 body: BEGIN_ statement_ • END

    END  shift, and go to state 63


State 33

   21 statement_: statement • ';'

    ';'  shift, and go to state 64


State 34

   23 statement: expression •
   51 expression: expression • ADDOP term

    ADDOP  shift, and go to state 65

    $default  reduce using rule 23 (statement)


State 35

   52 expression: term •
   53 term: term • MULOP exp_term
   54     | term • MODOP exp_term

    MULOP  shift, and go to state 66
    MODOP  shift, and go to state 67

    $default  reduce using rule 52 (expression)


State 36

   55 term: exp_term •

    $default  reduce using rule 55 (term)


State 37

   56 exp_term: neg_term • EXPOP exp_term
   57         | neg_term •

    EXPOP  shift, and go to state 68

    $default  reduce using rule 57 (exp_term)


State 38

   59 neg_term: primary •

    $default  reduce using rule 59 (neg_term)


State 39

    1 function: function_header optional_variable_ body ';' •

    $default  reduce using rule 1 (function)


State 40

   10 variable: IDENTIFIER ':' • type IS statement ';'
   11         | IDENTIFIER ':' • LIST OF type IS list ';'

    CHARACTER  shift, and go to state 41
    INTEGER    shift, and go to state 42
    LIST       shift, and go to state 69
    REAL       shift, and go to state 43

    type  go to state 70


State 41

    4 type: CHARACTER •

    $default  reduce using rule 4 (type)


State 42

    3 type: INTEGER •

    $default  reduce using rule 3 (type)


State 43

    5 type: REAL •

    $default  reduce using rule 5 (type)


State 44

   19 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 19 (parameter)


State 45

    2 function_header: FUNCTION IDENTIFIER optional_params RETURNS type • ';'

    ';'  shift, and go to state 71


State 46

   17 parameters: parameters ',' parameter •

    $default  reduce using rule 17 (parameters)


State 47

   22 statement_: error ';' •

    $default  reduce using rule 22 (statement_)


State 48

   64 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    '('           shift, and go to state 31

    expression  go to state 72
    term        go to state 35
    exp_term    go to state 36
    neg_term    go to state 37
    primary     go to state 38


State 49

   58 neg_term: NEGOP primary •

    $default  reduce using rule 58 (neg_term)


State 50

   36 direction: LEFT •

    $default  reduce using rule 36 (direction)


State 51

   37 direction: RIGHT •

    $default  reduce using rule 37 (direction)


State 52

   27 statement: FOLD direction • operator list_choice ENDFOLD

    ADDOP  shift, and go to state 73
    MULOP  shift, and go to state 74
    EXPOP  shift, and go to state 75

    operator  go to state 76


State 53

   47 not_condition: NOTOP • relation

    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    '('           shift, and go to state 54

    relation    go to state 77
    expression  go to state 59
    term        go to state 35
    exp_term    go to state 36
    neg_term    go to state 37
    primary     go to state 38


State 54

   49 relation: '(' • or_condition ')'
   60 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    NOTOP         shift, and go to state 53
    '('           shift, and go to state 54

    or_condition   go to state 78
    condition      go to state 56
    not_condition  go to state 57
    relation       go to state 58
    expression     go to state 79
    term           go to state 35
    exp_term       go to state 36
    neg_term       go to state 37
    primary        go to state 38


State 55

   26 statement: IF or_condition • THEN statement_ elsif_clauses ELSE statement_ ENDIF
   43 or_condition: or_condition • OROP condition

    OROP  shift, and go to state 80
    THEN  shift, and go to state 81


State 56

   44 or_condition: condition •
   45 condition: condition • ANDOP not_condition

    ANDOP  shift, and go to state 82

    $default  reduce using rule 44 (or_condition)


State 57

   46 condition: not_condition •

    $default  reduce using rule 46 (condition)


State 58

   48 not_condition: relation •

    $default  reduce using rule 48 (not_condition)


State 59

   50 relation: expression • RELOP expression
   51 expression: expression • ADDOP term

    ADDOP  shift, and go to state 65
    RELOP  shift, and go to state 83


State 60

   25 statement: SWITCH expression • IS cases OTHERS ARROW statement_ ENDSWITCH
   51 expression: expression • ADDOP term

    ADDOP  shift, and go to state 65
    IS     shift, and go to state 84


State 61

   24 statement: WHEN or_condition • ',' expression ':' expression
   43 or_condition: or_condition • OROP condition

    OROP  shift, and go to state 80
    ','   shift, and go to state 85


State 62

   51 expression: expression • ADDOP term
   60 primary: '(' expression • ')'

    ADDOP  shift, and go to state 65
    ')'    shift, and go to state 86


State 63

   20 body: BEGIN_ statement_ END •

    $default  reduce using rule 20 (body)


State 64

   21 statement_: statement ';' •

    $default  reduce using rule 21 (statement_)


State 65

   51 expression: expression ADDOP • term

    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    '('           shift, and go to state 31

    term      go to state 87
    exp_term  go to state 36
    neg_term  go to state 37
    primary   go to state 38


State 66

   53 term: term MULOP • exp_term

    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    '('           shift, and go to state 31

    exp_term  go to state 88
    neg_term  go to state 37
    primary   go to state 38


State 67

   54 term: term MODOP • exp_term

    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    '('           shift, and go to state 31

    exp_term  go to state 89
    neg_term  go to state 37
    primary   go to state 38


State 68

   56 exp_term: neg_term EXPOP • exp_term

    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    '('           shift, and go to state 31

    exp_term  go to state 90
    neg_term  go to state 37
    primary   go to state 38


State 69

   11 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 91


State 70

   10 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 92


State 71

    2 function_header: FUNCTION IDENTIFIER optional_params RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 72

   51 expression: expression • ADDOP term
   64 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 65
    ')'    shift, and go to state 93


State 73

   38 operator: ADDOP •

    $default  reduce using rule 38 (operator)


State 74

   39 operator: MULOP •

    $default  reduce using rule 39 (operator)


State 75

   40 operator: EXPOP •

    $default  reduce using rule 40 (operator)


State 76

   27 statement: FOLD direction operator • list_choice ENDFOLD

    IDENTIFIER  shift, and go to state 94
    '('         shift, and go to state 95

    list         go to state 96
    list_choice  go to state 97


State 77

   47 not_condition: NOTOP relation •

    $default  reduce using rule 47 (not_condition)


State 78

   43 or_condition: or_condition • OROP condition
   49 relation: '(' or_condition • ')'

    OROP  shift, and go to state 80
    ')'   shift, and go to state 98


State 79

   50 relation: expression • RELOP expression
   51 expression: expression • ADDOP term
   60 primary: '(' expression • ')'

    ADDOP  shift, and go to state 65
    RELOP  shift, and go to state 83
    ')'    shift, and go to state 86


State 80

   43 or_condition: or_condition OROP • condition

    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    NOTOP         shift, and go to state 53
    '('           shift, and go to state 54

    condition      go to state 99
    not_condition  go to state 57
    relation       go to state 58
    expression     go to state 59
    term           go to state 35
    exp_term       go to state 36
    neg_term       go to state 37
    primary        go to state 38


State 81

   26 statement: IF or_condition THEN • statement_ elsif_clauses ELSE statement_ ENDIF

    error         shift, and go to state 21
    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    FOLD          shift, and go to state 27
    IF            shift, and go to state 28
    SWITCH        shift, and go to state 29
    WHEN          shift, and go to state 30
    '('           shift, and go to state 31

    statement_  go to state 100
    statement   go to state 33
    expression  go to state 34
    term        go to state 35
    exp_term    go to state 36
    neg_term    go to state 37
    primary     go to state 38


State 82

   45 condition: condition ANDOP • not_condition

    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    NOTOP         shift, and go to state 53
    '('           shift, and go to state 54

    not_condition  go to state 101
    relation       go to state 58
    expression     go to state 59
    term           go to state 35
    exp_term       go to state 36
    neg_term       go to state 37
    primary        go to state 38


State 83

   50 relation: expression RELOP • expression

    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    '('           shift, and go to state 31

    expression  go to state 102
    term        go to state 35
    exp_term    go to state 36
    neg_term    go to state 37
    primary     go to state 38


State 84

   25 statement: SWITCH expression IS • cases OTHERS ARROW statement_ ENDSWITCH

    $default  reduce using rule 32 (cases)

    cases  go to state 103


State 85

   24 statement: WHEN or_condition ',' • expression ':' expression

    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    '('           shift, and go to state 31

    expression  go to state 104
    term        go to state 35
    exp_term    go to state 36
    neg_term    go to state 37
    primary     go to state 38


State 86

   60 primary: '(' expression ')' •

    $default  reduce using rule 60 (primary)


State 87

   51 expression: expression ADDOP term •
   53 term: term • MULOP exp_term
   54     | term • MODOP exp_term

    MULOP  shift, and go to state 66
    MODOP  shift, and go to state 67

    $default  reduce using rule 51 (expression)


State 88

   53 term: term MULOP exp_term •

    $default  reduce using rule 53 (term)


State 89

   54 term: term MODOP exp_term •

    $default  reduce using rule 54 (term)


State 90

   56 exp_term: neg_term EXPOP exp_term •

    $default  reduce using rule 56 (exp_term)


State 91

   11 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    CHARACTER  shift, and go to state 41
    INTEGER    shift, and go to state 42
    REAL       shift, and go to state 43

    type  go to state 105


State 92

   10 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    FOLD          shift, and go to state 27
    IF            shift, and go to state 28
    SWITCH        shift, and go to state 29
    WHEN          shift, and go to state 30
    '('           shift, and go to state 31

    statement   go to state 106
    expression  go to state 34
    term        go to state 35
    exp_term    go to state 36
    neg_term    go to state 37
    primary     go to state 38


State 93

   64 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 64 (primary)


State 94

   42 list_choice: IDENTIFIER •

    $default  reduce using rule 42 (list_choice)


State 95

   12 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    '('           shift, and go to state 31

    expressions  go to state 107
    expression   go to state 108
    term         go to state 35
    exp_term     go to state 36
    neg_term     go to state 37
    primary      go to state 38


State 96

   41 list_choice: list •

    $default  reduce using rule 41 (list_choice)


State 97

   27 statement: FOLD direction operator list_choice • ENDFOLD

    ENDFOLD  shift, and go to state 109


State 98

   49 relation: '(' or_condition ')' •

    $default  reduce using rule 49 (relation)


State 99

   43 or_condition: or_condition OROP condition •
   45 condition: condition • ANDOP not_condition

    ANDOP  shift, and go to state 82

    $default  reduce using rule 43 (or_condition)


State 100

   26 statement: IF or_condition THEN statement_ • elsif_clauses ELSE statement_ ENDIF

    $default  reduce using rule 29 (elsif_clauses)

    elsif_clauses  go to state 110


State 101

   45 condition: condition ANDOP not_condition •

    $default  reduce using rule 45 (condition)


State 102

   50 relation: expression RELOP expression •
   51 expression: expression • ADDOP term

    ADDOP  shift, and go to state 65

    $default  reduce using rule 50 (relation)


State 103

   25 statement: SWITCH expression IS cases • OTHERS ARROW statement_ ENDSWITCH
   31 cases: cases • case_

    error   shift, and go to state 111
    CASE    shift, and go to state 112
    OTHERS  shift, and go to state 113

    case_  go to state 114
    case   go to state 115


State 104

   24 statement: WHEN or_condition ',' expression • ':' expression
   51 expression: expression • ADDOP term

    ADDOP  shift, and go to state 65
    ':'    shift, and go to state 116


State 105

   11 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 117


State 106

   10 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 118


State 107

   12 list: '(' expressions • ')'
   13 expressions: expressions • ',' expression

    ')'  shift, and go to state 119
    ','  shift, and go to state 120


State 108

   14 expressions: expression •
   51 expression: expression • ADDOP term

    ADDOP  shift, and go to state 65

    $default  reduce using rule 14 (expressions)


State 109

   27 statement: FOLD direction operator list_choice ENDFOLD •

    $default  reduce using rule 27 (statement)


State 110

   26 statement: IF or_condition THEN statement_ elsif_clauses • ELSE statement_ ENDIF
   28 elsif_clauses: elsif_clauses • elsif_clause

    ELSE   shift, and go to state 121
    ELSIF  shift, and go to state 122

    elsif_clause  go to state 123


State 111

   34 case_: error • ';'

    ';'  shift, and go to state 124


State 112

   35 case: CASE • INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 125


State 113

   25 statement: SWITCH expression IS cases OTHERS • ARROW statement_ ENDSWITCH

    ARROW  shift, and go to state 126


State 114

   31 cases: cases case_ •

    $default  reduce using rule 31 (cases)


State 115

   33 case_: case •

    $default  reduce using rule 33 (case_)


State 116

   24 statement: WHEN or_condition ',' expression ':' • expression

    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    '('           shift, and go to state 31

    expression  go to state 127
    term        go to state 35
    exp_term    go to state 36
    neg_term    go to state 37
    primary     go to state 38


State 117

   11 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 95

    list  go to state 128


State 118

   10 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 10 (variable)


State 119

   12 list: '(' expressions ')' •

    $default  reduce using rule 12 (list)


State 120

   13 expressions: expressions ',' • expression

    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    '('           shift, and go to state 31

    expression  go to state 129
    term        go to state 35
    exp_term    go to state 36
    neg_term    go to state 37
    primary     go to state 38


State 121

   26 statement: IF or_condition THEN statement_ elsif_clauses ELSE • statement_ ENDIF

    error         shift, and go to state 21
    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    FOLD          shift, and go to state 27
    IF            shift, and go to state 28
    SWITCH        shift, and go to state 29
    WHEN          shift, and go to state 30
    '('           shift, and go to state 31

    statement_  go to state 130
    statement   go to state 33
    expression  go to state 34
    term        go to state 35
    exp_term    go to state 36
    neg_term    go to state 37
    primary     go to state 38


State 122

   30 elsif_clause: ELSIF • or_condition THEN statement_

    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    NOTOP         shift, and go to state 53
    '('           shift, and go to state 54

    or_condition   go to state 131
    condition      go to state 56
    not_condition  go to state 57
    relation       go to state 58
    expression     go to state 59
    term           go to state 35
    exp_term       go to state 36
    neg_term       go to state 37
    primary        go to state 38


State 123

   28 elsif_clauses: elsif_clauses elsif_clause •

    $default  reduce using rule 28 (elsif_clauses)


State 124

   34 case_: error ';' •

    $default  reduce using rule 34 (case_)


State 125

   35 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 132


State 126

   25 statement: SWITCH expression IS cases OTHERS ARROW • statement_ ENDSWITCH

    error         shift, and go to state 21
    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    FOLD          shift, and go to state 27
    IF            shift, and go to state 28
    SWITCH        shift, and go to state 29
    WHEN          shift, and go to state 30
    '('           shift, and go to state 31

    statement_  go to state 133
    statement   go to state 33
    expression  go to state 34
    term        go to state 35
    exp_term    go to state 36
    neg_term    go to state 37
    primary     go to state 38


State 127

   24 statement: WHEN or_condition ',' expression ':' expression •
   51 expression: expression • ADDOP term

    ADDOP  shift, and go to state 65

    $default  reduce using rule 24 (statement)


State 128

   11 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 134


State 129

   13 expressions: expressions ',' expression •
   51 expression: expression • ADDOP term

    ADDOP  shift, and go to state 65

    $default  reduce using rule 13 (expressions)


State 130

   26 statement: IF or_condition THEN statement_ elsif_clauses ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 135


State 131

   30 elsif_clause: ELSIF or_condition • THEN statement_
   43 or_condition: or_condition • OROP condition

    OROP  shift, and go to state 80
    THEN  shift, and go to state 136


State 132

   35 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    FOLD          shift, and go to state 27
    IF            shift, and go to state 28
    SWITCH        shift, and go to state 29
    WHEN          shift, and go to state 30
    '('           shift, and go to state 31

    statement   go to state 137
    expression  go to state 34
    term        go to state 35
    exp_term    go to state 36
    neg_term    go to state 37
    primary     go to state 38


State 133

   25 statement: SWITCH expression IS cases OTHERS ARROW statement_ • ENDSWITCH

    ENDSWITCH  shift, and go to state 138


State 134

   11 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 11 (variable)


State 135

   26 statement: IF or_condition THEN statement_ elsif_clauses ELSE statement_ ENDIF •

    $default  reduce using rule 26 (statement)


State 136

   30 elsif_clause: ELSIF or_condition THEN • statement_

    error         shift, and go to state 21
    IDENTIFIER    shift, and go to state 22
    INT_LITERAL   shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 26
    FOLD          shift, and go to state 27
    IF            shift, and go to state 28
    SWITCH        shift, and go to state 29
    WHEN          shift, and go to state 30
    '('           shift, and go to state 31

    statement_  go to state 139
    statement   go to state 33
    expression  go to state 34
    term        go to state 35
    exp_term    go to state 36
    neg_term    go to state 37
    primary     go to state 38


State 137

   35 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 140


State 138

   25 statement: SWITCH expression IS cases OTHERS ARROW statement_ ENDSWITCH •

    $default  reduce using rule 25 (statement)


State 139

   30 elsif_clause: ELSIF or_condition THEN statement_ •

    $default  reduce using rule 30 (elsif_clause)


State 140

   35 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 35 (case)
