Terminals unused in grammar

    ELSE
    ELSIF
    ENDFOLD
    ENDIF
    FOLD
    IF
    LEFT
    RIGHT
    THEN


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body ';'

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';'

    3 type: INTEGER
    4     | CHARACTER
    5     | REAL

    6 optional_variable: variable
    7                  | ε

    8 variable: IDENTIFIER ':' type IS statement ';'
    9         | IDENTIFIER ':' LIST OF type IS list ';'

   10 list: '(' expressions ')'

   11 expressions: expressions ',' expression
   12            | expression

   13 body: BEGIN_ statement_ END

   14 statement_: statement ';'
   15           | error ';'

   16 statement: expression
   17          | WHEN or_condition ',' expression ':' expression
   18          | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH

   19 cases: cases case
   20      | ε

   21 case: CASE INT_LITERAL ARROW statement ';'

   22 or_condition: or_condition OROP condition
   23             | condition

   24 condition: condition ANDOP relation
   25          | relation

   26 relation: '(' or_condition ')'
   27         | expression RELOP expression

   28 expression: expression ADDOP term
   29           | term

   30 term: term MULOP exp_term
   31     | term MODOP exp_term
   32     | exp_term

   33 exp_term: neg_term EXPOP exp_term
   34         | neg_term

   35 neg_term: NEGOP primary
   36         | primary

   37 primary: '(' expression ')'
   38        | INT_LITERAL
   39        | CHAR_LITERAL
   40        | REAL_LITERAL
   41        | IDENTIFIER '(' expression ')'
   42        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 10 26 37 41
    ')' (41) 10 26 37 41
    ',' (44) 11 17
    ':' (58) 8 9 17
    ';' (59) 1 2 8 9 14 15 18 21
    error (256) 15
    IDENTIFIER <iden> (258) 2 8 9 41 42
    INT_LITERAL <value> (259) 21 38
    CHAR_LITERAL <value> (260) 39
    REAL_LITERAL <value> (261) 40
    ADDOP <oper> (262) 28
    MULOP <oper> (263) 30
    MODOP <oper> (264) 31
    EXPOP <oper> (265) 33
    NEGOP <oper> (266) 35
    ANDOP <oper> (267) 24
    OROP <oper> (268) 22
    RELOP <oper> (269) 27
    ARROW (270) 18 21
    BEGIN_ (271) 13
    CASE (272) 21
    CHARACTER (273) 4
    ELSE (274)
    ELSIF (275)
    END (276) 13
    ENDFOLD (277)
    ENDIF (278)
    ENDSWITCH (279) 18
    FOLD (280)
    FUNCTION (281) 2
    IF (282)
    INTEGER (283) 3
    IS (284) 8 9 18
    LEFT (285)
    LIST (286) 9
    OF (287) 9
    OTHERS (288) 18
    REAL (289) 5
    RETURNS (290) 2
    RIGHT (291)
    SWITCH (292) 18
    THEN (293)
    WHEN (294) 17


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    function (46)
        on left: 1
        on right: 0
    function_header (47)
        on left: 2
        on right: 1
    type (48)
        on left: 3 4 5
        on right: 2 8 9
    optional_variable (49)
        on left: 6 7
        on right: 1
    variable (50)
        on left: 8 9
        on right: 6
    list <list> (51)
        on left: 10
        on right: 9
    expressions <list> (52)
        on left: 11 12
        on right: 10 11
    body <value> (53)
        on left: 13
        on right: 1
    statement_ <value> (54)
        on left: 14 15
        on right: 13
    statement <value> (55)
        on left: 16 17 18
        on right: 8 14 18 21
    cases <value> (56)
        on left: 19 20
        on right: 18 19
    case <value> (57)
        on left: 21
        on right: 19
    or_condition <value> (58)
        on left: 22 23
        on right: 17 22 26
    condition <value> (59)
        on left: 24 25
        on right: 22 23 24
    relation <value> (60)
        on left: 26 27
        on right: 24 25
    expression <value> (61)
        on left: 28 29
        on right: 11 12 16 17 18 27 28 37 41
    term <value> (62)
        on left: 30 31 32
        on right: 28 29 30 31
    exp_term <value> (63)
        on left: 33 34
        on right: 30 31 32 33
    neg_term <value> (64)
        on left: 35 36
        on right: 33 34
    primary <value> (65)
        on left: 37 38 39 40 41 42
        on right: 35 36


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable body ';'

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 7 (optional_variable)

    optional_variable  go to state 7
    variable           go to state 8


State 4

    2 function_header: FUNCTION IDENTIFIER • RETURNS type ';'

    RETURNS  shift, and go to state 9


State 5

    0 $accept: function $end •

    $default  accept


State 6

    8 variable: IDENTIFIER • ':' type IS statement ';'
    9         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 10


State 7

    1 function: function_header optional_variable • body ';'

    BEGIN_  shift, and go to state 11

    body  go to state 12


State 8

    6 optional_variable: variable •

    $default  reduce using rule 6 (optional_variable)


State 9

    2 function_header: FUNCTION IDENTIFIER RETURNS • type ';'

    CHARACTER  shift, and go to state 13
    INTEGER    shift, and go to state 14
    REAL       shift, and go to state 15

    type  go to state 16


State 10

    8 variable: IDENTIFIER ':' • type IS statement ';'
    9         | IDENTIFIER ':' • LIST OF type IS list ';'

    CHARACTER  shift, and go to state 13
    INTEGER    shift, and go to state 14
    LIST       shift, and go to state 17
    REAL       shift, and go to state 15

    type  go to state 18


State 11

   13 body: BEGIN_ • statement_ END

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    '('           shift, and go to state 27

    statement_  go to state 28
    statement   go to state 29
    expression  go to state 30
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 12

    1 function: function_header optional_variable body • ';'

    ';'  shift, and go to state 35


State 13

    4 type: CHARACTER •

    $default  reduce using rule 4 (type)


State 14

    3 type: INTEGER •

    $default  reduce using rule 3 (type)


State 15

    5 type: REAL •

    $default  reduce using rule 5 (type)


State 16

    2 function_header: FUNCTION IDENTIFIER RETURNS type • ';'

    ';'  shift, and go to state 36


State 17

    9 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 37


State 18

    8 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 38


State 19

   15 statement_: error • ';'

    ';'  shift, and go to state 39


State 20

   41 primary: IDENTIFIER • '(' expression ')'
   42        | IDENTIFIER •

    '('  shift, and go to state 40

    $default  reduce using rule 42 (primary)


State 21

   38 primary: INT_LITERAL •

    $default  reduce using rule 38 (primary)


State 22

   39 primary: CHAR_LITERAL •

    $default  reduce using rule 39 (primary)


State 23

   40 primary: REAL_LITERAL •

    $default  reduce using rule 40 (primary)


State 24

   35 neg_term: NEGOP • primary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 27

    primary  go to state 41


State 25

   18 statement: SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 42
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 26

   17 statement: WHEN • or_condition ',' expression ':' expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 43

    or_condition  go to state 44
    condition     go to state 45
    relation      go to state 46
    expression    go to state 47
    term          go to state 31
    exp_term      go to state 32
    neg_term      go to state 33
    primary       go to state 34


State 27

   37 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 48
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 28

   13 body: BEGIN_ statement_ • END

    END  shift, and go to state 49


State 29

   14 statement_: statement • ';'

    ';'  shift, and go to state 50


State 30

   16 statement: expression •
   28 expression: expression • ADDOP term

    ADDOP  shift, and go to state 51

    $default  reduce using rule 16 (statement)


State 31

   29 expression: term •
   30 term: term • MULOP exp_term
   31     | term • MODOP exp_term

    MULOP  shift, and go to state 52
    MODOP  shift, and go to state 53

    $default  reduce using rule 29 (expression)


State 32

   32 term: exp_term •

    $default  reduce using rule 32 (term)


State 33

   33 exp_term: neg_term • EXPOP exp_term
   34         | neg_term •

    EXPOP  shift, and go to state 54

    $default  reduce using rule 34 (exp_term)


State 34

   36 neg_term: primary •

    $default  reduce using rule 36 (neg_term)


State 35

    1 function: function_header optional_variable body ';' •

    $default  reduce using rule 1 (function)


State 36

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 37

    9 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    CHARACTER  shift, and go to state 13
    INTEGER    shift, and go to state 14
    REAL       shift, and go to state 15

    type  go to state 55


State 38

    8 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    '('           shift, and go to state 27

    statement   go to state 56
    expression  go to state 30
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 39

   15 statement_: error ';' •

    $default  reduce using rule 15 (statement_)


State 40

   41 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 57
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 41

   35 neg_term: NEGOP primary •

    $default  reduce using rule 35 (neg_term)


State 42

   18 statement: SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH
   28 expression: expression • ADDOP term

    ADDOP  shift, and go to state 51
    IS     shift, and go to state 58


State 43

   26 relation: '(' • or_condition ')'
   37 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 43

    or_condition  go to state 59
    condition     go to state 45
    relation      go to state 46
    expression    go to state 60
    term          go to state 31
    exp_term      go to state 32
    neg_term      go to state 33
    primary       go to state 34


State 44

   17 statement: WHEN or_condition • ',' expression ':' expression
   22 or_condition: or_condition • OROP condition

    OROP  shift, and go to state 61
    ','   shift, and go to state 62


State 45

   23 or_condition: condition •
   24 condition: condition • ANDOP relation

    ANDOP  shift, and go to state 63

    $default  reduce using rule 23 (or_condition)


State 46

   25 condition: relation •

    $default  reduce using rule 25 (condition)


State 47

   27 relation: expression • RELOP expression
   28 expression: expression • ADDOP term

    ADDOP  shift, and go to state 51
    RELOP  shift, and go to state 64


State 48

   28 expression: expression • ADDOP term
   37 primary: '(' expression • ')'

    ADDOP  shift, and go to state 51
    ')'    shift, and go to state 65


State 49

   13 body: BEGIN_ statement_ END •

    $default  reduce using rule 13 (body)


State 50

   14 statement_: statement ';' •

    $default  reduce using rule 14 (statement_)


State 51

   28 expression: expression ADDOP • term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    term      go to state 66
    exp_term  go to state 32
    neg_term  go to state 33
    primary   go to state 34


State 52

   30 term: term MULOP • exp_term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    exp_term  go to state 67
    neg_term  go to state 33
    primary   go to state 34


State 53

   31 term: term MODOP • exp_term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    exp_term  go to state 68
    neg_term  go to state 33
    primary   go to state 34


State 54

   33 exp_term: neg_term EXPOP • exp_term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    exp_term  go to state 69
    neg_term  go to state 33
    primary   go to state 34


State 55

    9 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 70


State 56

    8 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 71


State 57

   28 expression: expression • ADDOP term
   41 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 51
    ')'    shift, and go to state 72


State 58

   18 statement: SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH

    $default  reduce using rule 20 (cases)

    cases  go to state 73


State 59

   22 or_condition: or_condition • OROP condition
   26 relation: '(' or_condition • ')'

    OROP  shift, and go to state 61
    ')'   shift, and go to state 74


State 60

   27 relation: expression • RELOP expression
   28 expression: expression • ADDOP term
   37 primary: '(' expression • ')'

    ADDOP  shift, and go to state 51
    RELOP  shift, and go to state 64
    ')'    shift, and go to state 65


State 61

   22 or_condition: or_condition OROP • condition

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 43

    condition   go to state 75
    relation    go to state 46
    expression  go to state 47
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 62

   17 statement: WHEN or_condition ',' • expression ':' expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 76
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 63

   24 condition: condition ANDOP • relation

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 43

    relation    go to state 77
    expression  go to state 47
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 64

   27 relation: expression RELOP • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 78
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 65

   37 primary: '(' expression ')' •

    $default  reduce using rule 37 (primary)


State 66

   28 expression: expression ADDOP term •
   30 term: term • MULOP exp_term
   31     | term • MODOP exp_term

    MULOP  shift, and go to state 52
    MODOP  shift, and go to state 53

    $default  reduce using rule 28 (expression)


State 67

   30 term: term MULOP exp_term •

    $default  reduce using rule 30 (term)


State 68

   31 term: term MODOP exp_term •

    $default  reduce using rule 31 (term)


State 69

   33 exp_term: neg_term EXPOP exp_term •

    $default  reduce using rule 33 (exp_term)


State 70

    9 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 79

    list  go to state 80


State 71

    8 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 8 (variable)


State 72

   41 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 41 (primary)


State 73

   18 statement: SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   19 cases: cases • case

    CASE    shift, and go to state 81
    OTHERS  shift, and go to state 82

    case  go to state 83


State 74

   26 relation: '(' or_condition ')' •

    $default  reduce using rule 26 (relation)


State 75

   22 or_condition: or_condition OROP condition •
   24 condition: condition • ANDOP relation

    ANDOP  shift, and go to state 63

    $default  reduce using rule 22 (or_condition)


State 76

   17 statement: WHEN or_condition ',' expression • ':' expression
   28 expression: expression • ADDOP term

    ADDOP  shift, and go to state 51
    ':'    shift, and go to state 84


State 77

   24 condition: condition ANDOP relation •

    $default  reduce using rule 24 (condition)


State 78

   27 relation: expression RELOP expression •
   28 expression: expression • ADDOP term

    ADDOP  shift, and go to state 51

    $default  reduce using rule 27 (relation)


State 79

   10 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expressions  go to state 85
    expression   go to state 86
    term         go to state 31
    exp_term     go to state 32
    neg_term     go to state 33
    primary      go to state 34


State 80

    9 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 87


State 81

   21 case: CASE • INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 88


State 82

   18 statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 89


State 83

   19 cases: cases case •

    $default  reduce using rule 19 (cases)


State 84

   17 statement: WHEN or_condition ',' expression ':' • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 90
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 85

   10 list: '(' expressions • ')'
   11 expressions: expressions • ',' expression

    ')'  shift, and go to state 91
    ','  shift, and go to state 92


State 86

   12 expressions: expression •
   28 expression: expression • ADDOP term

    ADDOP  shift, and go to state 51

    $default  reduce using rule 12 (expressions)


State 87

    9 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 9 (variable)


State 88

   21 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 93


State 89

   18 statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    '('           shift, and go to state 27

    statement   go to state 94
    expression  go to state 30
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 90

   17 statement: WHEN or_condition ',' expression ':' expression •
   28 expression: expression • ADDOP term

    ADDOP  shift, and go to state 51

    $default  reduce using rule 17 (statement)


State 91

   10 list: '(' expressions ')' •

    $default  reduce using rule 10 (list)


State 92

   11 expressions: expressions ',' • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 95
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 93

   21 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    '('           shift, and go to state 27

    statement   go to state 96
    expression  go to state 30
    term        go to state 31
    exp_term    go to state 32
    neg_term    go to state 33
    primary     go to state 34


State 94

   18 statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 97


State 95

   11 expressions: expressions ',' expression •
   28 expression: expression • ADDOP term

    ADDOP  shift, and go to state 51

    $default  reduce using rule 11 (expressions)


State 96

   21 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 98


State 97

   18 statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 99


State 98

   21 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 21 (case)


State 99

   18 statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 18 (statement)
